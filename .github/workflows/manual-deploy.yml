name: Manual Production Deployment

on:
  workflow_dispatch:
    inputs:
      confirm_deployment:
        description: 'Type "deploy" to confirm production deployment'
        required: true
        default: ''
      image_tag:
        description: 'Image tag to deploy (default: latest from master)'
        required: false
        default: 'latest'

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_deployment == 'deploy'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

    - name: Determine image tags
      id: images
      run: |
        if [ "${{ github.event.inputs.image_tag }}" = "latest" ]; then
          echo "frontend-image=ghcr.io/${{ github.repository }}/landing-frontend:latest" >> $GITHUB_OUTPUT
          echo "backend-image=ghcr.io/${{ github.repository }}/landing-backend:latest" >> $GITHUB_OUTPUT
        else
          echo "frontend-image=ghcr.io/${{ github.repository }}/landing-frontend:${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
          echo "backend-image=ghcr.io/${{ github.repository }}/landing-backend:${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
        fi

    - name: Deploy to production server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        FRONTEND_IMAGE: ${{ steps.images.outputs.frontend-image }}
        BACKEND_IMAGE: ${{ steps.images.outputs.backend-image }}
      run: |
        echo "🚀 Deploying to production..."
        echo "Frontend: $FRONTEND_IMAGE"
        echo "Backend: $BACKEND_IMAGE"
        
        # Execute production deployment script
        ssh $DEPLOY_USER@$DEPLOY_HOST "
          export FRONTEND_IMAGE='$FRONTEND_IMAGE'
          export BACKEND_IMAGE='$BACKEND_IMAGE'
          /opt/zen-landing/scripts/deploy-production.sh
        "

    - name: Verify deployment
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      run: |
        echo "⏳ Waiting for services to be ready..."
        sleep 30
        
        # Check if site is accessible
        if curl -f -s https://$DEPLOY_HOST/api/health; then
          echo "✅ Production deployment verified successfully"
          echo "🌐 Site available at: https://$DEPLOY_HOST"
        else
          echo "❌ Production deployment verification failed"
          exit 1
        fi

    - name: Deployment summary
      if: always()
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend Image**: ${{ steps.images.outputs.frontend-image }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend Image**: ${{ steps.images.outputs.backend-image }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ **Production deployment completed successfully**" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Production deployment failed**" >> $GITHUB_STEP_SUMMARY
        fi 